{"ast":null,"code":"import _objectSpread from \"/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar removeOldestQuery = function removeOldestQuery(_ref) {\n  var persistedClient = _ref.persistedClient;\n  var mutations = _toConsumableArray(persistedClient.clientState.mutations);\n  var queries = _toConsumableArray(persistedClient.clientState.queries);\n  var client = _objectSpread(_objectSpread({}, persistedClient), {}, {\n    clientState: {\n      mutations: mutations,\n      queries: queries\n    }\n  }); // sort queries by dataUpdatedAt (oldest first)\n\n  var sortedQueries = _toConsumableArray(queries).sort(function (a, b) {\n    return a.state.dataUpdatedAt - b.state.dataUpdatedAt;\n  }); // clean oldest query\n\n  if (sortedQueries.length > 0) {\n    var oldestData = sortedQueries.shift();\n    client.clientState.queries = queries.filter(function (q) {\n      return q !== oldestData;\n    });\n    return client;\n  }\n  return undefined;\n};\nexport { removeOldestQuery };","map":{"version":3,"mappings":";;AAQO,IAAMA,iBAAiC,GAAG,SAApCA,iBAAiC,OAA4B;EAAA,IAAtBC;EAClD,IAAMC,SAAS,sBAAOD,eAAe,CAACE,WAAhB,CAA4BD,SAAhC,CAAlB;EACA,IAAME,OAAO,sBAAOH,eAAe,CAACE,WAAhB,CAA4BC,OAAhC,CAAhB;EACA,IAAMC,MAAuB,mCACxBJ,eAD2B;IAE9BE,WAAW,EAAE;MAAED,SAAF,EAAEA,SAAF;MAAaE;IAAb;EAAA,EAFf,CAHwE;;EASxE,IAAME,aAAa,GAAG,mBAAIF,OAAJ,EAAaG,IAAb,CACpB,UAACC,CAAD,EAAIC,CAAJ;IAAA,OAAUD,CAAC,CAACE,KAAF,CAAQC,aAAR,GAAwBF,CAAC,CAACC,KAAF,CAAQC,aADtB;EAAA,EAAtB,CATwE;;EAcxE,IAAIL,aAAa,CAACM,MAAd,GAAuB,CAA3B,EAA8B;IAC5B,IAAMC,UAAU,GAAGP,aAAa,CAACQ,KAAd,EAAnB;IACAT,MAAM,CAACF,WAAP,CAAmBC,OAAnB,GAA6BA,OAAO,CAACW,MAAR,CAAgBC,WAAD;MAAA,OAAOA,CAAC,KAAKH,UAA5B;IAAA,EAA7B;IACA,OAAOR,MAAP;EACD;EAED,OAAOY,SAAP;AACD","names":["removeOldestQuery","persistedClient","mutations","clientState","queries","client","sortedQueries","sort","a","b","state","dataUpdatedAt","length","oldestData","shift","filter","q","undefined"],"sources":["/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@tanstack/query-persist-client-core/src/retryStrategies.ts"],"sourcesContent":["import type { PersistedClient } from '@tanstack/query-persist-client-core'\n\nexport type PersistRetryer = (props: {\n  persistedClient: PersistedClient\n  error: Error\n  errorCount: number\n}) => PersistedClient | undefined\n\nexport const removeOldestQuery: PersistRetryer = ({ persistedClient }) => {\n  const mutations = [...persistedClient.clientState.mutations]\n  const queries = [...persistedClient.clientState.queries]\n  const client: PersistedClient = {\n    ...persistedClient,\n    clientState: { mutations, queries },\n  }\n\n  // sort queries by dataUpdatedAt (oldest first)\n  const sortedQueries = [...queries].sort(\n    (a, b) => a.state.dataUpdatedAt - b.state.dataUpdatedAt,\n  )\n\n  // clean oldest query\n  if (sortedQueries.length > 0) {\n    const oldestData = sortedQueries.shift()\n    client.clientState.queries = queries.filter((q) => q !== oldestData)\n    return client\n  }\n\n  return undefined\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}