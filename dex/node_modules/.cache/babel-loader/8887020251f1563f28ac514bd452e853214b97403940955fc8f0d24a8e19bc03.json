{"ast":null,"code":"import _toConsumableArray from \"/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nfunction createSyncStoragePersister(_ref) {\n  var storage = _ref.storage,\n    _ref$key = _ref.key,\n    key = _ref$key === void 0 ? \"REACT_QUERY_OFFLINE_CACHE\" : _ref$key,\n    _ref$throttleTime = _ref.throttleTime,\n    throttleTime = _ref$throttleTime === void 0 ? 1000 : _ref$throttleTime,\n    _ref$serialize = _ref.serialize,\n    serialize = _ref$serialize === void 0 ? JSON.stringify : _ref$serialize,\n    _ref$deserialize = _ref.deserialize,\n    deserialize = _ref$deserialize === void 0 ? JSON.parse : _ref$deserialize,\n    retry = _ref.retry;\n  if (typeof storage !== 'undefined') {\n    var trySave = function trySave(persistedClient) {\n      try {\n        storage.setItem(key, serialize(persistedClient));\n        return;\n      } catch (error) {\n        return error;\n      }\n    };\n    return {\n      persistClient: throttle(function (persistedClient) {\n        var client = persistedClient;\n        var error = trySave(client);\n        var errorCount = 0;\n        while (error && client) {\n          errorCount++;\n          client = retry == null ? void 0 : retry({\n            persistedClient: client,\n            error: error,\n            errorCount: errorCount\n          });\n          if (client) {\n            error = trySave(client);\n          }\n        }\n      }, throttleTime),\n      restoreClient: function restoreClient() {\n        var cacheString = storage.getItem(key);\n        if (!cacheString) {\n          return;\n        }\n        return deserialize(cacheString);\n      },\n      removeClient: function removeClient() {\n        storage.removeItem(key);\n      }\n    };\n  }\n  return {\n    persistClient: noop,\n    restoreClient: function restoreClient() {\n      return undefined;\n    },\n    removeClient: noop\n  };\n}\nfunction throttle(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n  var timer = null;\n  var params;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    params = args;\n    if (timer === null) {\n      timer = setTimeout(function () {\n        func.apply(void 0, _toConsumableArray(params));\n        timer = null;\n      }, wait);\n    }\n  };\n} // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nfunction noop() {}\nexport { createSyncStoragePersister };","map":{"version":3,"mappings":";AAoCO,SAASA,0BAAT,OAO0C;EAAA,IAN/CC,OADyC,QACzCA,OADyC;IAAA,gBAEzCC,GAAG;IAAHA,GAAG,yBAFsC;IAAA,yBAGzCC,YAAY;IAAZA,YAAY,kCAAG,IAH0B;IAAA,sBAIzCC,SAAS;IAATA,SAAS,+BAAGC,IAAI,CAACC,SAJwB;IAAA,wBAKzCC,WAAW;IAAXA,WAAW,iCAAGF,IAAI,CAACG,KALsB;IAMzCC;EAEA,IAAI,OAAOR,OAAP,KAAmB,WAAvB,EAAoC;IAClC,IAAMS,OAAO,GAAIC,SAAXD,OAAO,CAAIC,eAAD,EAAyD;MACvE,IAAI;QACFV,OAAO,CAACW,OAAR,CAAgBV,GAAhB,EAAqBE,SAAS,CAACO,eAAD,CAA9B;QACA;OAFF,CAGE,OAAOE,KAAP,EAAc;QACd,OAAOA,KAAP;MACD;KANH;IAQA,OAAO;MACLC,aAAa,EAAEC,QAAQ,CAAEJ,yBAAD,EAAqB;QAC3C,IAAIK,MAAmC,GAAGL,eAA1C;QACA,IAAIE,KAAK,GAAGH,OAAO,CAACM,MAAD,CAAnB;QACA,IAAIC,UAAU,GAAG,CAAjB;QACA,OAAOJ,KAAK,IAAIG,MAAhB,EAAwB;UACtBC,UAAU;UACVD,MAAM,GAAGP,KAAH,IAAGA,qBAAK,CAAG;YACfE,eAAe,EAAEK,MADF;YAEfH,KAFe,EAEfA,KAFe;YAGfI;UAHe,CAAH,CAAd;UAMA,IAAID,MAAJ,EAAY;YACVH,KAAK,GAAGH,OAAO,CAACM,MAAD,CAAf;UACD;QACF;OAfoB,EAgBpBb,YAhBoB,CADlB;MAkBLe,aAAa,EAAE,yBAAM;QACnB,IAAMC,WAAW,GAAGlB,OAAO,CAACmB,OAAR,CAAgBlB,GAAhB,CAApB;QAEA,IAAI,CAACiB,WAAL,EAAkB;UAChB;QACD;QAED,OAAOZ,WAAW,CAACY,WAAD,CAAlB;OAzBG;MA2BLE,YAAY,EAAE,wBAAM;QAClBpB,OAAO,CAACqB,UAAR,CAAmBpB,GAAnB;MACD;KA7BH;EA+BD;EAED,OAAO;IACLY,aAAa,EAAES,IADV;IAELL,aAAa,EAAE;MAAA,OAAMM,SAFhB;IAAA;IAGLH,YAAY,EAAEE;GAHhB;AAKD;AAED,SAASR,QAAT,CACEU,IADF,EAGE;EAAA,IADAC,IAAI,uEAAG,GAFT;EAIE,IAAIC,KAA2C,GAAG,IAAlD;EACA,IAAIC,MAAJ;EACA,OAAO,YAA0B;IAAA,kCAAbC,IAAb;MAAaA,IAAb;IAAA;IACLD,MAAM,GAAGC,IAAT;IACA,IAAIF,KAAK,KAAK,IAAd,EAAoB;MAClBA,KAAK,GAAGG,UAAU,CAAC,YAAM;QACvBL,IAAI,kCAAIG,MAAJ,EAAJ;QACAD,KAAK,GAAG,IAAR;OAFgB,EAGfD,IAHe,CAAlB;IAID;GAPH;AASD;;AAGD,SAASH,IAAT,GAAgB","names":["createSyncStoragePersister","storage","key","throttleTime","serialize","JSON","stringify","deserialize","parse","retry","trySave","persistedClient","setItem","error","persistClient","throttle","client","errorCount","restoreClient","cacheString","getItem","removeClient","removeItem","noop","undefined","func","wait","timer","params","args","setTimeout"],"sources":["/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@tanstack/query-sync-storage-persister/src/index.ts"],"sourcesContent":["import type {\n  PersistedClient,\n  Persister,\n  PersistRetryer,\n} from '@tanstack/query-persist-client-core'\n\ninterface Storage {\n  getItem: (key: string) => string | null\n  setItem: (key: string, value: string) => void\n  removeItem: (key: string) => void\n}\n\ninterface CreateSyncStoragePersisterOptions {\n  /** The storage client used for setting and retrieving items from cache.\n   * For SSR pass in `undefined`.\n   */\n  storage: Storage | undefined\n  /** The key to use when storing the cache */\n  key?: string\n  /** To avoid spamming,\n   * pass a time in ms to throttle saving the cache to disk */\n  throttleTime?: number\n  /**\n   * How to serialize the data to storage.\n   * @default `JSON.stringify`\n   */\n  serialize?: (client: PersistedClient) => string\n  /**\n   * How to deserialize the data from storage.\n   * @default `JSON.parse`\n   */\n  deserialize?: (cachedString: string) => PersistedClient\n\n  retry?: PersistRetryer\n}\n\nexport function createSyncStoragePersister({\n  storage,\n  key = `REACT_QUERY_OFFLINE_CACHE`,\n  throttleTime = 1000,\n  serialize = JSON.stringify,\n  deserialize = JSON.parse,\n  retry,\n}: CreateSyncStoragePersisterOptions): Persister {\n  if (typeof storage !== 'undefined') {\n    const trySave = (persistedClient: PersistedClient): Error | undefined => {\n      try {\n        storage.setItem(key, serialize(persistedClient))\n        return\n      } catch (error) {\n        return error as Error\n      }\n    }\n    return {\n      persistClient: throttle((persistedClient) => {\n        let client: PersistedClient | undefined = persistedClient\n        let error = trySave(client)\n        let errorCount = 0\n        while (error && client) {\n          errorCount++\n          client = retry?.({\n            persistedClient: client,\n            error,\n            errorCount,\n          })\n\n          if (client) {\n            error = trySave(client)\n          }\n        }\n      }, throttleTime),\n      restoreClient: () => {\n        const cacheString = storage.getItem(key)\n\n        if (!cacheString) {\n          return\n        }\n\n        return deserialize(cacheString) as PersistedClient\n      },\n      removeClient: () => {\n        storage.removeItem(key)\n      },\n    }\n  }\n\n  return {\n    persistClient: noop,\n    restoreClient: () => undefined,\n    removeClient: noop,\n  }\n}\n\nfunction throttle<TArgs extends any[]>(\n  func: (...args: TArgs) => any,\n  wait = 100,\n) {\n  let timer: ReturnType<typeof setTimeout> | null = null\n  let params: TArgs\n  return function (...args: TArgs) {\n    params = args\n    if (timer === null) {\n      timer = setTimeout(() => {\n        func(...params)\n        timer = null\n      }, wait)\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}