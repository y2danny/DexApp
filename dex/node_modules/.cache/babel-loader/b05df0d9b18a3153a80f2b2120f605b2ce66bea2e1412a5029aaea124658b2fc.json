{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _toConsumableArray from \"/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { Connector, __privateAdd, __privateGet, __privateSet, __publicField } from \"./chunk-5NCTPR6C.js\";\n\n// src/injected.ts\nimport { AddChainError, ChainNotConfiguredError, ConnectorNotFoundError, ResourceUnavailableError, SwitchChainError, UserRejectedRequestError, getClient, normalizeChainId } from \"@wagmi/core\";\nimport { providers } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\n\n// src/utils/getInjectedName.ts\nfunction getInjectedName(ethereum) {\n  var _ethereum$providers, _getName;\n  if (!ethereum) return \"Injected\";\n  var getName = function getName(provider) {\n    if (provider.isAvalanche) return \"Core Wallet\";\n    if (provider.isBitKeep) return \"BitKeep\";\n    if (provider.isBraveWallet) return \"Brave Wallet\";\n    if (provider.isCoinbaseWallet) return \"Coinbase Wallet\";\n    if (provider.isExodus) return \"Exodus\";\n    if (provider.isFrame) return \"Frame\";\n    if (provider.isKuCoinWallet) return \"KuCoin Wallet\";\n    if (provider.isMathWallet) return \"MathWallet\";\n    if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet) return \"1inch Wallet\";\n    if (provider.isOpera) return \"Opera\";\n    if (provider.isPortal) return \"Ripio Portal\";\n    if (provider.isRainbow) return \"Rainbow\";\n    if (provider.isTally) return \"Tally\";\n    if (provider.isTokenPocket) return \"TokenPocket\";\n    if (provider.isTokenary) return \"Tokenary\";\n    if (provider.isTrust || provider.isTrustWallet) return \"Trust Wallet\";\n    if (provider.isMetaMask) return \"MetaMask\";\n  };\n  if ((_ethereum$providers = ethereum.providers) !== null && _ethereum$providers !== void 0 && _ethereum$providers.length) {\n    var _names$;\n    var nameSet = /* @__PURE__ */new Set();\n    var unknownCount = 1;\n    var _iterator = _createForOfIteratorHelper(ethereum.providers),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var provider = _step.value;\n        var name = getName(provider);\n        if (!name) {\n          name = \"Unknown Wallet #\".concat(unknownCount);\n          unknownCount += 1;\n        }\n        nameSet.add(name);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    var names = _toConsumableArray(nameSet);\n    if (names.length) return names;\n    return (_names$ = names[0]) !== null && _names$ !== void 0 ? _names$ : \"Injected\";\n  }\n  return (_getName = getName(ethereum)) !== null && _getName !== void 0 ? _getName : \"Injected\";\n}\n\n// src/injected.ts\nvar _provider, _switchingChains;\nvar InjectedConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(InjectedConnector, _Connector);\n  var _super = _createSuper(InjectedConnector);\n  function InjectedConnector() {\n    var _this;\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      chains = _ref.chains,\n      options_ = _ref.options;\n    _classCallCheck(this, InjectedConnector);\n    var options = _objectSpread({\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider: function getProvider() {\n        return typeof window !== \"undefined\" ? window.ethereum : void 0;\n      }\n    }, options_);\n    _this = _super.call(this, {\n      chains: chains,\n      options: options\n    });\n    __publicField(_assertThisInitialized(_this), \"id\");\n    __publicField(_assertThisInitialized(_this), \"name\");\n    __publicField(_assertThisInitialized(_this), \"ready\");\n    __privateAdd(_assertThisInitialized(_this), _provider, void 0);\n    __privateAdd(_assertThisInitialized(_this), _switchingChains, void 0);\n    __publicField(_assertThisInitialized(_this), \"shimDisconnectKey\", \"injected.shimDisconnect\");\n    __publicField(_assertThisInitialized(_this), \"onAccountsChanged\", function (accounts) {\n      if (accounts.length === 0) _this.emit(\"disconnect\");else _this.emit(\"change\", {\n        account: getAddress(accounts[0])\n      });\n    });\n    __publicField(_assertThisInitialized(_this), \"onChainChanged\", function (chainId) {\n      var id = normalizeChainId(chainId);\n      var unsupported = _this.isChainUnsupported(id);\n      _this.emit(\"change\", {\n        chain: {\n          id: id,\n          unsupported: unsupported\n        }\n      });\n    });\n    __publicField(_assertThisInitialized(_this), \"onDisconnect\", function () {\n      var _getClient$storage;\n      if (_this.options.shimChainChangedDisconnect && __privateGet(_assertThisInitialized(_this), _switchingChains)) {\n        __privateSet(_assertThisInitialized(_this), _switchingChains, false);\n        return;\n      }\n      _this.emit(\"disconnect\");\n      if (_this.options.shimDisconnect) (_getClient$storage = getClient().storage) === null || _getClient$storage === void 0 ? void 0 : _getClient$storage.removeItem(_this.shimDisconnectKey);\n    });\n    var provider = options.getProvider();\n    if (typeof options.name === \"string\") _this.name = options.name;else if (provider) {\n      var detectedName = getInjectedName(provider);\n      if (options.name) _this.name = options.name(detectedName);else {\n        if (typeof detectedName === \"string\") _this.name = detectedName;else _this.name = detectedName[0];\n      }\n    } else _this.name = \"Injected\";\n    _this.id = \"injected\";\n    _this.ready = !!provider;\n    return _this;\n  }\n  _createClass(InjectedConnector, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _ref2,\n          chainId,\n          _getClient$storage2,\n          provider,\n          accounts,\n          account,\n          id,\n          unsupported,\n          chain,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, chainId = _ref2.chainId;\n              _context.prev = 1;\n              _context.next = 4;\n              return this.getProvider();\n            case 4:\n              provider = _context.sent;\n              if (provider) {\n                _context.next = 7;\n                break;\n              }\n              throw new ConnectorNotFoundError();\n            case 7:\n              if (provider.on) {\n                provider.on(\"accountsChanged\", this.onAccountsChanged);\n                provider.on(\"chainChanged\", this.onChainChanged);\n                provider.on(\"disconnect\", this.onDisconnect);\n              }\n              this.emit(\"message\", {\n                type: \"connecting\"\n              });\n              _context.next = 11;\n              return provider.request({\n                method: \"eth_requestAccounts\"\n              });\n            case 11:\n              accounts = _context.sent;\n              account = getAddress(accounts[0]);\n              _context.next = 15;\n              return this.getChainId();\n            case 15:\n              id = _context.sent;\n              unsupported = this.isChainUnsupported(id);\n              if (!(chainId && id !== chainId)) {\n                _context.next = 23;\n                break;\n              }\n              _context.next = 20;\n              return this.switchChain(chainId);\n            case 20:\n              chain = _context.sent;\n              id = chain.id;\n              unsupported = this.isChainUnsupported(id);\n            case 23:\n              if (this.options.shimDisconnect) (_getClient$storage2 = getClient().storage) === null || _getClient$storage2 === void 0 ? void 0 : _getClient$storage2.setItem(this.shimDisconnectKey, true);\n              return _context.abrupt(\"return\", {\n                account: account,\n                chain: {\n                  id: id,\n                  unsupported: unsupported\n                },\n                provider: provider\n              });\n            case 27:\n              _context.prev = 27;\n              _context.t0 = _context[\"catch\"](1);\n              if (!this.isUserRejectedRequestError(_context.t0)) {\n                _context.next = 31;\n                break;\n              }\n              throw new UserRejectedRequestError(_context.t0);\n            case 31:\n              if (!(_context.t0.code === -32002)) {\n                _context.next = 33;\n                break;\n              }\n              throw new ResourceUnavailableError(_context.t0);\n            case 33:\n              throw _context.t0;\n            case 34:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[1, 27]]);\n      }));\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _getClient$storage3;\n        var provider;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.getProvider();\n            case 2:\n              provider = _context2.sent;\n              if (provider !== null && provider !== void 0 && provider.removeListener) {\n                _context2.next = 5;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 5:\n              provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n              provider.removeListener(\"chainChanged\", this.onChainChanged);\n              provider.removeListener(\"disconnect\", this.onDisconnect);\n              if (this.options.shimDisconnect) (_getClient$storage3 = getClient().storage) === null || _getClient$storage3 === void 0 ? void 0 : _getClient$storage3.removeItem(this.shimDisconnectKey);\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n      return disconnect;\n    }()\n  }, {\n    key: \"getAccount\",\n    value: function () {\n      var _getAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var provider, accounts;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.getProvider();\n            case 2:\n              provider = _context3.sent;\n              if (provider) {\n                _context3.next = 5;\n                break;\n              }\n              throw new ConnectorNotFoundError();\n            case 5:\n              _context3.next = 7;\n              return provider.request({\n                method: \"eth_accounts\"\n              });\n            case 7:\n              accounts = _context3.sent;\n              return _context3.abrupt(\"return\", getAddress(accounts[0]));\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function getAccount() {\n        return _getAccount.apply(this, arguments);\n      }\n      return getAccount;\n    }()\n  }, {\n    key: \"getChainId\",\n    value: function () {\n      var _getChainId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var provider;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this.getProvider();\n            case 2:\n              provider = _context4.sent;\n              if (provider) {\n                _context4.next = 5;\n                break;\n              }\n              throw new ConnectorNotFoundError();\n            case 5:\n              return _context4.abrupt(\"return\", provider.request({\n                method: \"eth_chainId\"\n              }).then(normalizeChainId));\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function getChainId() {\n        return _getChainId.apply(this, arguments);\n      }\n      return getChainId;\n    }()\n  }, {\n    key: \"getProvider\",\n    value: function () {\n      var _getProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var provider;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              provider = this.options.getProvider();\n              if (provider) __privateSet(this, _provider, provider);\n              return _context5.abrupt(\"return\", __privateGet(this, _provider));\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function getProvider() {\n        return _getProvider.apply(this, arguments);\n      }\n      return getProvider;\n    }()\n  }, {\n    key: \"getSigner\",\n    value: function () {\n      var _getSigner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var _ref3,\n          chainId,\n          _yield$Promise$all,\n          _yield$Promise$all2,\n          provider,\n          account,\n          _args6 = arguments;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _ref3 = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {}, chainId = _ref3.chainId;\n              _context6.next = 3;\n              return Promise.all([this.getProvider(), this.getAccount()]);\n            case 3:\n              _yield$Promise$all = _context6.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              provider = _yield$Promise$all2[0];\n              account = _yield$Promise$all2[1];\n              return _context6.abrupt(\"return\", new providers.Web3Provider(provider, chainId).getSigner(account));\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function getSigner() {\n        return _getSigner.apply(this, arguments);\n      }\n      return getSigner;\n    }()\n  }, {\n    key: \"isAuthorized\",\n    value: function () {\n      var _isAuthorized = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var _getClient$storage4, provider, account;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              if (!(this.options.shimDisconnect && !((_getClient$storage4 = getClient().storage) !== null && _getClient$storage4 !== void 0 && _getClient$storage4.getItem(this.shimDisconnectKey)))) {\n                _context7.next = 3;\n                break;\n              }\n              return _context7.abrupt(\"return\", false);\n            case 3:\n              _context7.next = 5;\n              return this.getProvider();\n            case 5:\n              provider = _context7.sent;\n              if (provider) {\n                _context7.next = 8;\n                break;\n              }\n              throw new ConnectorNotFoundError();\n            case 8:\n              _context7.next = 10;\n              return this.getAccount();\n            case 10:\n              account = _context7.sent;\n              return _context7.abrupt(\"return\", !!account);\n            case 14:\n              _context7.prev = 14;\n              _context7.t0 = _context7[\"catch\"](0);\n              return _context7.abrupt(\"return\", false);\n            case 17:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 14]]);\n      }));\n      function isAuthorized() {\n        return _isAuthorized.apply(this, arguments);\n      }\n      return isAuthorized;\n    }()\n  }, {\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(chainId) {\n        var provider, id, _this$chains$find, _error$data, _error$data$originalE, chain, _ref4, _chain$rpcUrls$public, _chain$rpcUrls$public2;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (this.options.shimChainChangedDisconnect) __privateSet(this, _switchingChains, true);\n              _context8.next = 3;\n              return this.getProvider();\n            case 3:\n              provider = _context8.sent;\n              if (provider) {\n                _context8.next = 6;\n                break;\n              }\n              throw new ConnectorNotFoundError();\n            case 6:\n              id = hexValue(chainId);\n              _context8.prev = 7;\n              _context8.next = 10;\n              return provider.request({\n                method: \"wallet_switchEthereumChain\",\n                params: [{\n                  chainId: id\n                }]\n              });\n            case 10:\n              return _context8.abrupt(\"return\", (_this$chains$find = this.chains.find(function (x) {\n                return x.id === chainId;\n              })) !== null && _this$chains$find !== void 0 ? _this$chains$find : {\n                id: chainId,\n                name: \"Chain \".concat(id),\n                network: \"\".concat(id),\n                nativeCurrency: {\n                  name: \"Ether\",\n                  decimals: 18,\n                  symbol: \"ETH\"\n                },\n                rpcUrls: {\n                  default: {\n                    http: [\"\"]\n                  }\n                }\n              });\n            case 13:\n              _context8.prev = 13;\n              _context8.t0 = _context8[\"catch\"](7);\n              chain = this.chains.find(function (x) {\n                return x.id === chainId;\n              });\n              if (chain) {\n                _context8.next = 18;\n                break;\n              }\n              throw new ChainNotConfiguredError({\n                chainId: chainId,\n                connectorId: this.id\n              });\n            case 18:\n              if (!(_context8.t0.code === 4902 || (_context8.t0 === null || _context8.t0 === void 0 ? void 0 : (_error$data = _context8.t0.data) === null || _error$data === void 0 ? void 0 : (_error$data$originalE = _error$data.originalError) === null || _error$data$originalE === void 0 ? void 0 : _error$data$originalE.code) === 4902)) {\n                _context8.next = 30;\n                break;\n              }\n              _context8.prev = 19;\n              _context8.next = 22;\n              return provider.request({\n                method: \"wallet_addEthereumChain\",\n                params: [{\n                  chainId: id,\n                  chainName: chain.name,\n                  nativeCurrency: chain.nativeCurrency,\n                  rpcUrls: [(_ref4 = (_chain$rpcUrls$public = (_chain$rpcUrls$public2 = chain.rpcUrls.public) === null || _chain$rpcUrls$public2 === void 0 ? void 0 : _chain$rpcUrls$public2.http[0]) !== null && _chain$rpcUrls$public !== void 0 ? _chain$rpcUrls$public : chain.rpcUrls.default.http[0]) !== null && _ref4 !== void 0 ? _ref4 : \"\"],\n                  blockExplorerUrls: this.getBlockExplorerUrls(chain)\n                }]\n              });\n            case 22:\n              return _context8.abrupt(\"return\", chain);\n            case 25:\n              _context8.prev = 25;\n              _context8.t1 = _context8[\"catch\"](19);\n              if (!this.isUserRejectedRequestError(_context8.t1)) {\n                _context8.next = 29;\n                break;\n              }\n              throw new UserRejectedRequestError(_context8.t0);\n            case 29:\n              throw new AddChainError();\n            case 30:\n              if (!this.isUserRejectedRequestError(_context8.t0)) {\n                _context8.next = 32;\n                break;\n              }\n              throw new UserRejectedRequestError(_context8.t0);\n            case 32:\n              throw new SwitchChainError(_context8.t0);\n            case 33:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[7, 13], [19, 25]]);\n      }));\n      function switchChain(_x) {\n        return _switchChain.apply(this, arguments);\n      }\n      return switchChain;\n    }()\n  }, {\n    key: \"watchAsset\",\n    value: function () {\n      var _watchAsset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(_ref5) {\n        var address, _ref5$decimals, decimals, image, symbol, provider;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              address = _ref5.address, _ref5$decimals = _ref5.decimals, decimals = _ref5$decimals === void 0 ? 18 : _ref5$decimals, image = _ref5.image, symbol = _ref5.symbol;\n              _context9.next = 3;\n              return this.getProvider();\n            case 3:\n              provider = _context9.sent;\n              if (provider) {\n                _context9.next = 6;\n                break;\n              }\n              throw new ConnectorNotFoundError();\n            case 6:\n              return _context9.abrupt(\"return\", provider.request({\n                method: \"wallet_watchAsset\",\n                params: {\n                  type: \"ERC20\",\n                  options: {\n                    address: address,\n                    decimals: decimals,\n                    image: image,\n                    symbol: symbol\n                  }\n                }\n              }));\n            case 7:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function watchAsset(_x2) {\n        return _watchAsset.apply(this, arguments);\n      }\n      return watchAsset;\n    }()\n  }, {\n    key: \"isUserRejectedRequestError\",\n    value: function isUserRejectedRequestError(error) {\n      return error.code === 4001;\n    }\n  }]);\n  return InjectedConnector;\n}(Connector);\n_provider = new WeakMap();\n_switchingChains = new WeakMap();\nexport { InjectedConnector };","map":{"version":3,"names":["Connector","__privateAdd","__privateGet","__privateSet","__publicField","AddChainError","ChainNotConfiguredError","ConnectorNotFoundError","ResourceUnavailableError","SwitchChainError","UserRejectedRequestError","getClient","normalizeChainId","providers","getAddress","hexValue","getInjectedName","ethereum","getName","provider","isAvalanche","isBitKeep","isBraveWallet","isCoinbaseWallet","isExodus","isFrame","isKuCoinWallet","isMathWallet","isOneInchIOSWallet","isOneInchAndroidWallet","isOpera","isPortal","isRainbow","isTally","isTokenPocket","isTokenary","isTrust","isTrustWallet","isMetaMask","length","nameSet","Set","unknownCount","name","add","names","_provider","_switchingChains","InjectedConnector","chains","options_","options","shimDisconnect","shimChainChangedDisconnect","getProvider","window","accounts","emit","account","chainId","id","unsupported","isChainUnsupported","chain","storage","removeItem","shimDisconnectKey","detectedName","ready","on","onAccountsChanged","onChainChanged","onDisconnect","type","request","method","getChainId","switchChain","setItem","isUserRejectedRequestError","code","removeListener","then","Promise","all","getAccount","Web3Provider","getSigner","getItem","params","find","x","network","nativeCurrency","decimals","symbol","rpcUrls","default","http","connectorId","data","originalError","chainName","public","blockExplorerUrls","getBlockExplorerUrls","address","image","error","WeakMap"],"sources":["/Users/mac/Desktop/Dex/dexStarter/dex/node_modules/@wagmi/connectors/dist/chunk-5VSTPJLT.js"],"sourcesContent":["import {\n  Connector,\n  __privateAdd,\n  __privateGet,\n  __privateSet,\n  __publicField\n} from \"./chunk-5NCTPR6C.js\";\n\n// src/injected.ts\nimport {\n  AddChainError,\n  ChainNotConfiguredError,\n  ConnectorNotFoundError,\n  ResourceUnavailableError,\n  SwitchChainError,\n  UserRejectedRequestError,\n  getClient,\n  normalizeChainId\n} from \"@wagmi/core\";\nimport { providers } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\n\n// src/utils/getInjectedName.ts\nfunction getInjectedName(ethereum) {\n  if (!ethereum)\n    return \"Injected\";\n  const getName = (provider) => {\n    if (provider.isAvalanche)\n      return \"Core Wallet\";\n    if (provider.isBitKeep)\n      return \"BitKeep\";\n    if (provider.isBraveWallet)\n      return \"Brave Wallet\";\n    if (provider.isCoinbaseWallet)\n      return \"Coinbase Wallet\";\n    if (provider.isExodus)\n      return \"Exodus\";\n    if (provider.isFrame)\n      return \"Frame\";\n    if (provider.isKuCoinWallet)\n      return \"KuCoin Wallet\";\n    if (provider.isMathWallet)\n      return \"MathWallet\";\n    if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet)\n      return \"1inch Wallet\";\n    if (provider.isOpera)\n      return \"Opera\";\n    if (provider.isPortal)\n      return \"Ripio Portal\";\n    if (provider.isRainbow)\n      return \"Rainbow\";\n    if (provider.isTally)\n      return \"Tally\";\n    if (provider.isTokenPocket)\n      return \"TokenPocket\";\n    if (provider.isTokenary)\n      return \"Tokenary\";\n    if (provider.isTrust || provider.isTrustWallet)\n      return \"Trust Wallet\";\n    if (provider.isMetaMask)\n      return \"MetaMask\";\n  };\n  if (ethereum.providers?.length) {\n    const nameSet = /* @__PURE__ */ new Set();\n    let unknownCount = 1;\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n      if (!name) {\n        name = `Unknown Wallet #${unknownCount}`;\n        unknownCount += 1;\n      }\n      nameSet.add(name);\n    }\n    const names = [...nameSet];\n    if (names.length)\n      return names;\n    return names[0] ?? \"Injected\";\n  }\n  return getName(ethereum) ?? \"Injected\";\n}\n\n// src/injected.ts\nvar _provider, _switchingChains;\nvar InjectedConnector = class extends Connector {\n  constructor({\n    chains,\n    options: options_\n  } = {}) {\n    const options = {\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider: () => typeof window !== \"undefined\" ? window.ethereum : void 0,\n      ...options_\n    };\n    super({ chains, options });\n    __publicField(this, \"id\");\n    __publicField(this, \"name\");\n    __publicField(this, \"ready\");\n    __privateAdd(this, _provider, void 0);\n    __privateAdd(this, _switchingChains, void 0);\n    __publicField(this, \"shimDisconnectKey\", \"injected.shimDisconnect\");\n    __publicField(this, \"onAccountsChanged\", (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", {\n          account: getAddress(accounts[0])\n        });\n    });\n    __publicField(this, \"onChainChanged\", (chainId) => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    });\n    __publicField(this, \"onDisconnect\", () => {\n      if (this.options.shimChainChangedDisconnect && __privateGet(this, _switchingChains)) {\n        __privateSet(this, _switchingChains, false);\n        return;\n      }\n      this.emit(\"disconnect\");\n      if (this.options.shimDisconnect)\n        getClient().storage?.removeItem(this.shimDisconnectKey);\n    });\n    const provider = options.getProvider();\n    if (typeof options.name === \"string\")\n      this.name = options.name;\n    else if (provider) {\n      const detectedName = getInjectedName(provider);\n      if (options.name)\n        this.name = options.name(detectedName);\n      else {\n        if (typeof detectedName === \"string\")\n          this.name = detectedName;\n        else\n          this.name = detectedName[0];\n      }\n    } else\n      this.name = \"Injected\";\n    this.id = \"injected\";\n    this.ready = !!provider;\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", { type: \"connecting\" });\n      const accounts = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = getAddress(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options.shimDisconnect)\n        getClient().storage?.setItem(this.shimDisconnectKey, true);\n      return { account, chain: { id, unsupported }, provider };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error))\n        throw new UserRejectedRequestError(error);\n      if (error.code === -32002)\n        throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    if (!provider?.removeListener)\n      return;\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    if (this.options.shimDisconnect)\n      getClient().storage?.removeItem(this.shimDisconnectKey);\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    return provider.request({ method: \"eth_chainId\" }).then(normalizeChainId);\n  }\n  async getProvider() {\n    const provider = this.options.getProvider();\n    if (provider)\n      __privateSet(this, _provider, provider);\n    return __privateGet(this, _provider);\n  }\n  async getSigner({ chainId } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider(),\n      this.getAccount()\n    ]);\n    return new providers.Web3Provider(\n      provider,\n      chainId\n    ).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      if (this.options.shimDisconnect && !getClient().storage?.getItem(this.shimDisconnectKey))\n        return false;\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new ConnectorNotFoundError();\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    if (this.options.shimChainChangedDisconnect)\n      __privateSet(this, _switchingChains, true);\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    const id = hexValue(chainId);\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: id }]\n      });\n      return this.chains.find((x) => x.id === chainId) ?? {\n        id: chainId,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n        rpcUrls: { default: { http: [\"\"] } }\n      };\n    } catch (error) {\n      const chain = this.chains.find((x) => x.id === chainId);\n      if (!chain)\n        throw new ChainNotConfiguredError({ chainId, connectorId: this.id });\n      if (error.code === 4902 || error?.data?.originalError?.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: id,\n                chainName: chain.name,\n                nativeCurrency: chain.nativeCurrency,\n                rpcUrls: [\n                  chain.rpcUrls.public?.http[0] ?? chain.rpcUrls.default.http[0] ?? \"\"\n                ],\n                blockExplorerUrls: this.getBlockExplorerUrls(chain)\n              }\n            ]\n          });\n          return chain;\n        } catch (addError) {\n          if (this.isUserRejectedRequestError(addError))\n            throw new UserRejectedRequestError(error);\n          throw new AddChainError();\n        }\n      }\n      if (this.isUserRejectedRequestError(error))\n        throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n  async watchAsset({\n    address,\n    decimals = 18,\n    image,\n    symbol\n  }) {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n};\n_provider = new WeakMap();\n_switchingChains = new WeakMap();\n\nexport {\n  InjectedConnector\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}